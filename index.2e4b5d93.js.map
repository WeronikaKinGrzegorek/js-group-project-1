{"mappings":"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","sources":["src/js/add-queue.js","src/js/modal-movie.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\nimport { handleMovieClick } from './modal-movie';\n\nconst addToQueueButton = document.querySelector('#watchlistButton');\nconst queueButton = document.querySelector('#queueButton');\nconst apiKey = '55e390226d2f3f6feba5afe684a5a044';\nlet queue = JSON.parse(localStorage.getItem('movieQueue')) || [];\nlet movies = [];\n\nexport function addToQueue(movieData) {\n  const movieId = movieData.id;\n  const isMovieInQueue = queue.some(movieInQueue => movieInQueue.id === movieId);\n\n  if (!isMovieInQueue) {\n    queue.push(movieData);\n    localStorage.setItem('movieQueue', JSON.stringify(queue));\n    Notify.success(`Added movie \"${movieData.title}\" to queue list.`);\n  } else {\n    Notify.failure(`Movie \"${movieData.title}\" is already in queue list.`);\n  }\n}\n\naddToQueueButton.addEventListener('click', async () => {\n  try {\n    const response = await fetch('https://api.themoviedb.org/3/search/movie?api_key=' + apiKey);\n    const data = await response.json();\n    movies = data.results;\n\n    movies.forEach(movie => {\n      addToQueue(movie);\n    });\n    Notify.success(`Added movie \"${movieData.title}\" to queue list.`);\n  } catch (error) {\n    Notify.failure('Error while fetching movies:', error);\n  }\n});\n\nexport function displayQueue() {\n  console.log(queue);\n}\n\nqueueButton.addEventListener('click', () => {\n  displayQueue(queue);\n});\n","import { showLoader, hideLoader } from './loader.js';\n\nconst moviesContainer = document.querySelector('.gallery-home');\nconst apiKey = '55e390226d2f3f6feba5afe684a5a044';\nconst loadMoreButton = document.getElementById('loadMore');\nlet currentPage = 1;\nlet data;\n\nimport { addToQueue } from './add-queue';\n\nasync function fetchGenreName(genreId) {\n  const genreUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`;\n  try {\n    const response = await fetch(genreUrl);\n    const genreData = await response.json();\n    const genre = genreData.genres.find(genre => genre.id === genreId);\n    return genre ? genre.name : 'Nieznany';\n  } catch (error) {\n    console.error('Błąd pobierania gatunków:', error);\n    return 'Nieznany';\n  }\n}\n\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  return date.getFullYear();\n}\n\nasync function openModal(movieData) {\n  const modal = document.getElementById('movieModal');\n  const modalContent = modal.querySelector('.modal-content');\n  const modalPoster = modal.querySelector('#modalPoster');\n  modalPoster.src = `https://image.tmdb.org/t/p/w300${movieData.poster_path}`;\n  modalPoster.alt = movieData.title;\n  const modalTitle = modal.querySelector('#modalTitle');\n  modalTitle.textContent = movieData.title.toUpperCase();\n  const modalRating = modal.querySelector('#modalRating');\n  modalRating.textContent = movieData.vote_average;\n  const modalPopularity = modal.querySelector('#modalPopularity');\n  modalPopularity.textContent = movieData.popularity;\n  const modalOriginalTitle = modal.querySelector('#modalOriginalTitle');\n  modalOriginalTitle.textContent = movieData.original_title;\n  const genreIds = movieData.genre_ids;\n  const genreNames = await Promise.all(\n    genreIds.map(async genreId => await fetchGenreName(genreId)),\n  );\n  const modalGenres = modal.querySelector('#modalGenres');\n  modalGenres.textContent = genreNames.join(', ');\n  const modalOverview = modal.querySelector('#modalOverview');\n  modalOverview.textContent = movieData.overview;\n  const watchedButton = modal.querySelector('#watchedButton');\n  watchedButton.addEventListener('click', () => {\n    console.log('Dodano do obejrzanych: ' + movieData.title);\n  });\n  const watchlistButton = modal.querySelector('#watchlistButton');\n  watchlistButton.addEventListener('click', () => {\n    console.log('Dodano do obejrzenia: ' + movieData.title);\n  });\n  const trailerLink = modal.querySelector('#trailerLink');\n  trailerLink.href = `https://www.youtube.com/results?search_query=${movieData.title}+trailer`;\n  modal.style.display = 'block';\n\n  // Dodaj obsługę zdarzenia klawisza \"Esc\" po otwarciu modala.\n  document.addEventListener('keydown', handleEscKey);\n\n  // Dodaj obsługę zamykania modala po kliknięciu w obszar poza nim.\n  modal.addEventListener('click', function (event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n}\n\nfunction closeModal() {\n  const modal = document.getElementById('movieModal');\n  modal.style.display = 'none';\n\n  // Usuń obsługę zdarzenia klawisza \"Esc\" po zamknięciu modala.\n  document.removeEventListener('keydown', handleEscKey);\n}\n\n// Dodaj funkcję obsługującą zdarzenie naciśnięcia klawisza \"Esc\".\nfunction handleEscKey(event) {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n}\n\nexport function handleMovieClick(event) {\n  const movieElement = event.target.closest('.movie');\n  if (movieElement) {\n    const movieIndex = Array.from(moviesContainer.children).indexOf(movieElement);\n    const movieData = data.results[movieIndex];\n\n    addToQueue(movieData);\n\n    openModal(movieData);\n  }\n}\n\ndocument.addEventListener('click', handleMovieClick);\n\nconst modalCloseButton = document.getElementById('modalCloseButton');\nmodalCloseButton.addEventListener('click', closeModal);\n\nasync function fetchMoviesPopular() {\n  const url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${currentPage}`;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n\n    for (const movie of data.results) {\n      const movieElement = document.createElement('div');\n      movieElement.classList.add('movie');\n\n      const genreNames = await Promise.all(\n        movie.genre_ids.map(async genreId => await fetchGenreName(genreId)),\n      );\n\n      const releaseYear = formatDate(movie.release_date);\n\n      movieElement.innerHTML = `\n        <div class=\"movie-content\">\n          <img src=\"https://image.tmdb.org/t/p/w300${movie.poster_path}\" alt=\"${movie.title}\">\n          <h3 class=\"movie-title\">${movie.title.toUpperCase()}</h3>\n          <p class=\"movie-info\">\n            ${genreNames.join(', ')} | ${releaseYear}\n          </p>\n        </div>\n      `;\n      moviesContainer.appendChild(movieElement);\n    }\n    hideLoader();\n    currentPage++;\n  } catch (error) {\n    console.error('Błąd pobierania danych:', error);\n  }\n}\n\nloadMoreButton.addEventListener('click', fetchMoviesPopular);\n\nfetchMoviesPopular();\n"],"names":["$7IoHk","parcelRequire","$fHyLY","$a898f20bd771b561$var$moviesContainer","document","querySelector","$a898f20bd771b561$var$apiKey","$a898f20bd771b561$var$loadMoreButton","getElementById","$a898f20bd771b561$var$data","$a898f20bd771b561$var$currentPage","async","$a898f20bd771b561$var$fetchGenreName","genreId","genreUrl","response","fetch","genre","json","genres","find","id","name","error","console","$a898f20bd771b561$var$closeModal","style","display","removeEventListener","$a898f20bd771b561$var$handleEscKey","event","key","addEventListener","movieElement","target","closest","movieIndex","Array","from","children","indexOf","movieData","results","$82620ba3e0e3cf2d$export$30665681cb9a2b60","modal","modalPoster","src","poster_path","alt","title","textContent","toUpperCase","vote_average","popularity","original_title","genreIds","genre_ids","genreNames","Promise","all","map","join","overview","log","href","$a898f20bd771b561$var$openModal","$a898f20bd771b561$var$fetchMoviesPopular","url","movie","createElement","classList","add","releaseYear","dateString","release_date","Date","getFullYear","innerHTML","appendChild","hideLoader","$82620ba3e0e3cf2d$var$addToQueueButton","$82620ba3e0e3cf2d$var$queueButton","$82620ba3e0e3cf2d$var$queue","JSON","parse","localStorage","getItem","$82620ba3e0e3cf2d$var$movies","movieData1","movieId","some","movieInQueue","Notify","failure","push","setItem","stringify","success","data","forEach"],"version":3,"file":"index.2e4b5d93.js.map"}