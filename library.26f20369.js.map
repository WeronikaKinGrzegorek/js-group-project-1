{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,4CCAAD,EAAAC,EAAA,SAKA,MAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,GAC5EC,QAAQC,IAAIN,GACZ,MAAMO,EAAoBC,SAASC,cAAc,YAC3CC,EAAgBF,SAASG,eAAe,wBAIvCC,eAAeC,EAAqBC,GACzC,IACEP,EAAkBQ,UAAY,GAE9B,MAAMC,EAAyBF,EAAcG,KAC3C,EAACC,YACCA,EAAWC,OACXA,EAAMC,UACNA,EAASC,GACTA,EAAEC,aACFA,EAAYC,MACZA,EAAKC,aACLA,MAEA,MAAMC,EAAaP,EACjB,kCAAsBA,IACtB,6EAIIQ,GAFqBP,GAAkBC,GAG1CH,KAAIU,GACIA,EAAMC,KAAOD,EAAMC,KAAO,kBAElCC,KAAK,MAEFC,EAAcN,EAAaO,QAAQ,GAEzC,MAAO,6DAA6DV,wBAC1DI,WAAoBF,gBAAoBF,mBAC9CE,EAAMS,gCACPN,aAAsBJ,EAAaW,MAAM,EAAG,gDACvBH,oBACtB,IAINvB,EAAkB2B,mBAAmB,YAAalB,EAGpD,CAFE,MAAOmB,GACP9B,QAAQ8B,MAAMA,EAChB,CACF,CAEAzB,EAAc0B,iBAAiB,SAAS,MACtC,EAAAtC,EAAAuC,cACAxB,EAAqBb,IACrB,EAAAF,EAAAwC,aAAS,IC1DXxC,EAAAC,EAAA,SAEA,MAAMwC,EAActC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GACtEC,QAAQC,IAAIiC,GACZ,MAAMC,EAAkBhC,SAASC,cAAc,YACzCgC,EAAcjC,SAASG,eAAe,sBAuC5C8B,EAAYL,iBAAiB,SAAS,MACpC,EAAAtC,EAAAuC,cApCKzB,eAAkC8B,GACvC,IACEF,EAAgBzB,UAAY,GAE5B,MAAM4B,EAAuBD,EAAYzB,KACvC,EAACC,YAAEA,EAAWC,OAAEA,EAAMC,UAAEA,EAASC,GAAEA,EAAEC,aAAEA,EAAYC,MAAEA,EAAKC,aAAEA,MAC1D,MAAMC,EAAaP,EACf,kCAAsBA,IACtB,6EAIEQ,GAFmBP,GAAkBC,GAGxCH,KAAIU,GACIA,EAAMC,KAAOD,EAAMC,KAAO,kBAElCC,KAAK,MAEFC,EAAcN,EAAaO,QAAQ,GAEzC,MAAO,6DAA6DV,wBAC1DI,WAAoBF,gBAAoBF,mBAC9CE,EAAMS,gCACPN,aAAsBJ,EAAaW,MAAM,EAAG,gDACvBH,oBACtB,IAINU,EAAgBN,mBAAmB,YAAaS,EAGlD,CAFE,MAAOR,GACP9B,QAAQ8B,MAAMA,EAChB,CACF,CAIES,CAAmBL,IACnB,EAAAzC,EAAAwC,aAAS,I,wBFjCX,MAAMO,EAAgB5C,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,GAE5EI,SAAS4B,iBAAiB,oBAAoB,YAC5C,EAAAtC,EAAAuC,cACAxB,EAAqBgC,IACrB,EAAA/C,EAAAwC,aACF","sources":["src/library.js","src/js/watchedLibrary.js","src/js/queueLibrary.js"],"sourcesContent":["import './js/loader.js';\nimport './js/dark-mode';\nimport './sass/main.scss';\nimport './js/modal-team';\nimport './js/add-queue';\nimport './js/add-watchlist';\nimport './js/watchedLibrary';\nimport './js/queueLibrary';\nimport { showLoader, hideLoader } from './js/loader.js';\n\nimport './js/modal-movie';\n\nimport { displayWatchedMovies } from './js/watchedLibrary.js';\n\nconst watchedMovies = JSON.parse(localStorage.getItem('movieWatchlist')) || [];\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  showLoader();\n  displayWatchedMovies(watchedMovies);\n  hideLoader();\n});\n","import {\n  showLoader,\n  hideLoader\n} from './loader';\n\nconst watchedMovies = JSON.parse(localStorage.getItem('movieWatchlist')) || [];\nconsole.log(watchedMovies);\nconst watchedMoviesList = document.querySelector('.library');\nconst watchedButton = document.getElementById('watchedButtonLibrary');\n\nconst BASE_POSTER_PATH = 'https://image.tmdb.org/t/p/w500';\n\nexport async function displayWatchedMovies(watchedMovies) {\n  try {\n    watchedMoviesList.innerHTML = '';\n\n    const galleryOfWatchedMovies = watchedMovies.map(\n      ({\n        poster_path,\n        genres,\n        genre_ids,\n        id,\n        release_date,\n        title,\n        vote_average\n      }) => {\n        const posterPath = poster_path ?\n          `${BASE_POSTER_PATH}${poster_path}` :\n          'https://moviereelist.com/wp-content/uploads/2019/07/poster-placeholder.jpg';\n\n        const watchedMovieGenres = genres ? genres : genre_ids;\n\n        const genreNames = watchedMovieGenres\n          .map(genre => {\n            return genre.name ? genre.name : 'Unknown Genre';\n          })\n          .join(', ');\n\n        const voteAverage = vote_average.toFixed(1);\n\n        return `<li class=\"library-item gallery__list-item\" data-movieid=\"${id}\">\n      <img src=\"${posterPath}\" alt=\"${title}\" movie-id=\"${id}\"/>\n      <h3>${title.toUpperCase()}</h3>\n      <p>${genreNames} | <span>${release_date.slice(0, 4)}</span></p>\n    <div class=\"vote-average\">${voteAverage}</div>\n    </li>`;\n      },\n    );\n\n    watchedMoviesList.insertAdjacentHTML('beforeend', galleryOfWatchedMovies);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nwatchedButton.addEventListener('click', () => {\n  showLoader();\n  displayWatchedMovies(watchedMovies);\n  hideLoader();\n});","import { showLoader, hideLoader } from './loader';\n\nconst savedMovies = JSON.parse(localStorage.getItem('movieQueue')) || [];\nconsole.log(savedMovies);\nconst savedMoviesList = document.querySelector('.library');\nconst queueButton = document.getElementById('queueButtonLibrary');\n\nconst BASE_POSTER_PATH = 'https://image.tmdb.org/t/p/w500';\n\nexport async function displaySavedMovies(savedMovies) {\n  try {\n    savedMoviesList.innerHTML = '';\n\n    const galleryOfSavedMovies = savedMovies.map(\n      ({ poster_path, genres, genre_ids, id, release_date, title, vote_average }) => {\n        const posterPath = poster_path\n          ? `${BASE_POSTER_PATH}${poster_path}`\n          : 'https://moviereelist.com/wp-content/uploads/2019/07/poster-placeholder.jpg';\n\n        const savedMovieGenres = genres ? genres : genre_ids;\n\n        const genreNames = savedMovieGenres\n          .map(genre => {\n            return genre.name ? genre.name : 'Unknown Genre';\n          })\n          .join(', ');\n\n        const voteAverage = vote_average.toFixed(1);\n\n        return `<li class=\"library-item gallery__list-item\" data-movieid=\"${id}\">\n      <img src=\"${posterPath}\" alt=\"${title}\" movie-id=\"${id}\"/>\n      <h3>${title.toUpperCase()}</h3>\n      <p>${genreNames} | <span>${release_date.slice(0, 4)}</span></p>\n    <div class=\"vote-average\">${voteAverage}</div>\n    </li>`;\n      },\n    );\n\n    savedMoviesList.insertAdjacentHTML('beforeend', galleryOfSavedMovies);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nqueueButton.addEventListener('click', () => {\n  showLoader();\n  displaySavedMovies(savedMovies);\n  hideLoader();\n});\n"],"names":["$fHyLY","parcelRequire","$6e333127fc2b34a4$var$watchedMovies","JSON","parse","localStorage","getItem","console","log","$6e333127fc2b34a4$var$watchedMoviesList","document","querySelector","$6e333127fc2b34a4$var$watchedButton","getElementById","async","$6e333127fc2b34a4$export$7a9cf3c7f2b4f503","watchedMovies","innerHTML","galleryOfWatchedMovies","map","poster_path","genres","genre_ids","id","release_date","title","vote_average","posterPath","genreNames","genre","name","join","voteAverage","toFixed","toUpperCase","slice","insertAdjacentHTML","error","addEventListener","showLoader","hideLoader","$28faedf8cbc4a007$var$savedMovies","$28faedf8cbc4a007$var$savedMoviesList","$28faedf8cbc4a007$var$queueButton","savedMovies","galleryOfSavedMovies","$28faedf8cbc4a007$export$6aeb2b33215fefd3","$9a8afeea60b9dfd3$var$watchedMovies"],"version":3,"file":"library.26f20369.js.map"}