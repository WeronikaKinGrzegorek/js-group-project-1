{"mappings":"AAAA,MAAMA,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,GAC5EC,QAAQC,IAAIN,GACZ,MAAMO,EAAoBC,SAASC,cAAc,YAC3CC,EAAgBF,SAASG,eAAe,wBAuC9CD,EAAcE,iBAAiB,SAAS,MAnCjCC,eAAoCC,GACzC,IACEP,EAAkBQ,UAAY,GAE9B,MAAMC,EAAyBF,EAAcG,KAC3C,EAACC,YAAEA,EAAWC,OAAEA,EAAMC,GAAEA,EAAEC,aAAEA,EAAYC,MAAEA,EAAKC,aAAEA,MAC/C,MAAMC,EAAaN,EACf,kCAAsBA,IACtB,6EAIEO,EAFsBN,EAGzBF,KAAIS,GACIA,EAAMC,KAAOD,EAAMC,KAAO,kBAElCC,KAAK,MAEFC,EAAcN,EAAaO,QAAQ,GAEzC,MAAO,0CAA0CV,wBACvCI,WAAoBF,gBAAoBF,mBAC9CE,EAAMS,gCACPN,aAAsBJ,EAAaW,MAAM,EAAG,gDACvBH,oBACtB,IAINtB,EAAkB0B,mBAAmB,YAAajB,EAGpD,CAFE,MAAOkB,GACP7B,QAAQ6B,MAAMA,EAChB,CACF,CAGEC,CAAqBnC,EAAA","sources":["src/js/watchedLibrary.js"],"sourcesContent":["const watchedMovies = JSON.parse(localStorage.getItem('movieWatchlist')) || [];\nconsole.log(watchedMovies);\nconst watchedMoviesList = document.querySelector('.library');\nconst watchedButton = document.getElementById('watchedButtonLibrary');\n\nconst BASE_POSTER_PATH = 'https://image.tmdb.org/t/p/w500';\n\nexport async function displayWatchedMovies(watchedMovies) {\n  try {\n    watchedMoviesList.innerHTML = '';\n\n    const galleryOfWatchedMovies = watchedMovies.map(\n      ({ poster_path, genres, id, release_date, title, vote_average }) => {\n        const posterPath = poster_path\n          ? `${BASE_POSTER_PATH}${poster_path}`\n          : 'https://moviereelist.com/wp-content/uploads/2019/07/poster-placeholder.jpg';\n\n        const watchedMoviesGenres = genres;\n\n        const genreNames = watchedMoviesGenres\n          .map(genre => {\n            return genre.name ? genre.name : 'Unknown Genre';\n          })\n          .join(', ');\n\n        const voteAverage = vote_average.toFixed(1);\n\n        return `<li class=\"library-item\" data-movieid=\"${id}\">\n      <img src=\"${posterPath}\" alt=\"${title}\" movie-id=\"${id}\"/>\n      <h3>${title.toUpperCase()}</h3>\n      <p>${genreNames} | <span>${release_date.slice(0, 4)}</span></p>\n    <div class=\"vote-average\">${voteAverage}</div>\n    </li>`;\n      },\n    );\n\n    watchedMoviesList.insertAdjacentHTML('beforeend', galleryOfWatchedMovies);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nwatchedButton.addEventListener('click', () => {\n  displayWatchedMovies(watchedMovies);\n});\n\n// async function fetchMovieInfo(movieId) {\n//   try {\n//     const response = await fetch(`https://api.themoviedb.org/3/genre/movie/list/${movieId}`);\n//     const data = await response.json();\n//     // Обробіть дані та поверніть їх\n//     return data;\n//   } catch (error) {\n//     console.error(error);\n//     return {}; // Поверніть порожній об'єкт у разі помилки\n//   }\n// }\n\n// варіант коли функція створює розмітку html\n// function renderLibrary(storageContent) {\n//   const moviesContainer = document.querySelector('.library-gallery'); // Отримайте контейнер, куди потрібно вставити HTML-розмітку\n//   moviesContainer.innerHTML = ''; // Очистіть контейнер перед вставкою нового вмісту\n\n//   storageContent.forEach(({ id, poster_path, title, genres, release_date }) => {\n//     // Створіть HTML-елемент для кожного фільму\n//     const movieElement = createMovieElement({\n//       id,\n//       poster_path,\n//       title,\n//       vote_average: '', // Додайте ваш рейтинг фільму, якщо він доступний\n//     });\n\n//     // Додайте фільмовий елемент в контейнер\n//     moviesContainer.appendChild(movieElement);\n//   });\n// }\n\n// // Функція createMovieElement, яку ви вже маєте\n// function createMovieElement(movieData) {\n//   const movieElement = document.createElement('li');\n//   movieElement.classList.add(''); // Додайте необхідні класи для стилізації\n\n//   const movieLink = document.createElement('a');\n//   movieLink.href = '#';\n//   movieLink.classList.add(''); // Додайте класи для стилізації посилання\n\n//   const movieImage = document.createElement('div');\n//   movieImage.classList.add(''); // Додайте класи для стилізації зображення\n//   movieImage.innerHTML = `<img id=\"${movieData.id}\" src=\"${IMG_URL + movieData.poster_path}\" alt=\"${\n//     movieData.title\n//   }\" />`;\n\n//   const movieInfo = document.createElement('div');\n//   movieInfo.classList.add(''); // Додайте класи для стилізації інформації про фільм\n//   movieInfo.innerHTML = `\n//     <h2>${movieData.title}</h2>\n//     <p>${movieData.vote_average ? `Рейтинг: ${movieData.vote_average}` : ''}</p>\n//     <p>${movieData.genres ? movieData.genres.join(', ') : ''} | ${\n//     movieData.release_date ? movieData.release_date.slice(0, 4) : ''\n//   }</p>\n//   `;\n\n//   // Додайте всі елементи до DOM\n//   movieLink.appendChild(movieImage);\n//   movieLink.appendChild(movieInfo);\n//   movieElement.appendChild(movieLink);\n\n//   return movieElement;\n// }\n\n// function createMovieElement(movieData) {\n//   const movieElement = document.createElement('div');\n//   movieElement.classList.add('movie');\n//   const movieImage = document.createElement('img');\n//   movieImage.src = movieData.poster_path;\n//   movieImage.alt = movieData.title;\n//   const movieTitle = document.createElement('h2');\n//   movieTitle.textContent = movieData.title;\n//   const movieRating = document.createElement('p');\n//   movieRating.textContent = `Średnia ocena: ${movieData.vote_average}`;\n\n//   movieElement.appendChild(movieImage);\n//   movieElement.appendChild(movieTitle);\n//   movieElement.appendChild(movieRating);\n\n//   return movieElement;\n// }\n\n// const watchedButton = document.getElementById('watchedButtonLibrary');\n// watchedButton.addEventListener('click', () => {\n//   displayWatchedMovies();\n// });\n\n// // function renderLibrary(storageContent) {\n//   const markup = storageContent\n//     .map(({ id, poster_path, title, genres, release_date }) => {\n//       return `<li class=\"\" data-id=\"${id}\">\n//         <a href=\"#\" class=\"\" data-id=\"${id}\">\n//           <div class=\"\">\n//             <img class=\"\" id=\"${id}\" src=\"${IMG_URL + poster_path}\" alt=\"${title}\" />\n//           </div>\n//           <div class=\"\">\n//             <h2 class=\"\">${title}</h2>\n//             <p class=\"\">${genres.map(({ name }) => name).join(', ')} | ${release_date.slice(\n//         0,\n//         4,\n//       )}</p>\n//           </div>\n//         </a>\n//       </li>`;\n//     })\n//     .join('');\n\n//   // Отримайте контейнер, куди потрібно вставити HTML-розмітку\n//   const moviesContainer = document.querySelector('.library');\n\n//   // Вставте HTML-розмітку в контейнер\n//   moviesContainer.innerHTML = markup;\n// }\n"],"names":["$6e333127fc2b34a4$var$watchedMovies","JSON","parse","localStorage","getItem","console","log","$6e333127fc2b34a4$var$watchedMoviesList","document","querySelector","$6e333127fc2b34a4$var$watchedButton","getElementById","addEventListener","async","watchedMovies","innerHTML","galleryOfWatchedMovies","map","poster_path","genres","id","release_date","title","vote_average","posterPath","genreNames","genre","name","join","voteAverage","toFixed","toUpperCase","slice","insertAdjacentHTML","error","$6e333127fc2b34a4$export$7a9cf3c7f2b4f503"],"version":3,"file":"library.8f8ad706.js.map"}