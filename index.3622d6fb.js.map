{"mappings":"AAAA,MAAMA,EAAS,mCAETC,EAAkBC,SAASC,cAAc,WACzCC,EAAiBF,SAASG,eAAe,YAC/C,IACIC,EADAC,EAAc,EAGlBC,eAAeC,EAAeC,GAC5B,MAAMC,EAAW,yDAAyDX,mBAC1E,IACE,MAAMY,QAAiBC,MAAMF,GAGvBG,SAFkBF,EAASG,QAETC,OAAOC,MAAKH,GAASA,EAAMI,KAAOR,IAC1D,OAAOI,EAAQA,EAAMK,KAAO,UAI9B,CAHE,MAAOC,GAEP,OADAC,QAAQD,MAAM,4BAA6BA,GACpC,UACT,CACF,CA0DAlB,SAASoB,iBAAiB,SAASd,MAAMe,IACvC,MAAMC,EAAeD,EAAME,OAAOC,QAAQ,UAC1C,GAAIF,EAAc,CAChB,MAAMG,EAAaC,MAAMC,KAAK5B,EAAgB6B,UAAUC,QAAQP,GAC1DQ,EAAY1B,EAAK2B,QAAQN,SAvDnCnB,eAAyBwB,GACvB,MAAME,EAAQhC,SAASG,eAAe,cAGhC8B,GAFeD,EAAM/B,cAAc,kBAErB+B,EAAM/B,cAAc,iBACxCgC,EAAYC,IAAM,kCAAkCJ,EAAUK,cAC9DF,EAAYG,IAAMN,EAAUO,MAETL,EAAM/B,cAAc,eAC5BqC,YAAcR,EAAUO,MAEfL,EAAM/B,cAAc,gBAC5BqC,YAAcR,EAAUS,aAEZP,EAAM/B,cAAc,oBAC5BqC,YAAcR,EAAUU,WAEbR,EAAM/B,cAAc,uBAC5BqC,YAAcR,EAAUW,eAE3C,MAAMC,EAAWZ,EAAUa,UACrBC,QAAmBC,QAAQC,IAC/BJ,EAASK,KAAIzC,MAAME,SAAiBD,EAAeC,MAEjCwB,EAAM/B,cAAc,gBAC5BqC,YAAcM,EAAWI,KAAK,MAEpBhB,EAAM/B,cAAc,kBAC5BqC,YAAcR,EAAUmB,SAEhBjB,EAAM/B,cAAc,kBAC5BmB,iBAAiB,SAAS,KACtCD,QAAQ+B,IAAI,0BAA4BpB,EAAUO,MAAK,IAGjCL,EAAM/B,cAAc,oBAC5BmB,iBAAiB,SAAS,KACxCD,QAAQ+B,IAAI,yBAA2BpB,EAAUO,MAAK,IAGpCL,EAAM/B,cAAc,gBAC5BkD,KAAO,gDAAgDrB,EAAUO,gBAE7EL,EAAMoB,MAAMC,QAAU,OACxB,CAYUC,CAAUxB,EAClB,KAMFxB,eAAeiD,IACb,MAAMC,EAAM,sDAAsD1D,yBAA8BO,IAChG,IACE,MAAMK,QAAiBC,MAAM6C,GAC7BpD,QAAaM,EAASG,OAEtB,IAAK,MAAM4C,KAASrD,EAAK2B,QAAS,CAChC,MAAMT,EAAetB,SAAS0D,cAAc,OAC5CpC,EAAaqC,UAAUC,IAAI,SAE3B,MAAMhB,QAAmBC,QAAQC,IAC/BW,EAAMd,UAAUI,KAAIzC,MAAME,SAAiBD,EAAeC,MAGtDqD,GAlFQC,EAkFiBL,EAAMM,aAjF5B,IAAIC,KAAKF,GACVG,eAkFR3C,EAAa4C,UAAY,sDACoBT,EAAMtB,qBAAqBsB,EAAMpB,wBACtEoB,EAAMpB,iCACAO,EAAWI,KAAK,uCACTa,gBAErB9D,EAAgBoE,YAAY7C,EAC9B,CAEAjB,GAGF,CAFE,MAAOa,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,CAhGF,IAAoB4C,CAiGpB,CAhCyB9D,SAASG,eAAe,oBAChCiB,iBAAiB,SAflC,WACgBpB,SAASG,eAAe,cAChCiD,MAAMC,QAAU,MACxB,IA6CAnD,EAAekB,iBAAiB,QAASmC,GAEzCA","sources":["src/js/modal-movie.js"],"sourcesContent":["const apiKey = '55e390226d2f3f6feba5afe684a5a044';\n\nconst moviesContainer = document.querySelector('.movies');\nconst loadMoreButton = document.getElementById('loadMore');\nlet currentPage = 1;\nlet data;\n\nasync function fetchGenreName(genreId) {\n  const genreUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`;\n  try {\n    const response = await fetch(genreUrl);\n    const genreData = await response.json();\n\n    const genre = genreData.genres.find(genre => genre.id === genreId);\n    return genre ? genre.name : 'Nieznany';\n  } catch (error) {\n    console.error('Błąd pobierania gatunków:', error);\n    return 'Nieznany';\n  }\n}\n\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  return date.getFullYear();\n}\n\nasync function openModal(movieData) {\n  const modal = document.getElementById('movieModal');\n  const modalContent = modal.querySelector('.modal-content');\n\n  const modalPoster = modal.querySelector('#modalPoster');\n  modalPoster.src = `https://image.tmdb.org/t/p/w300${movieData.poster_path}`;\n  modalPoster.alt = movieData.title;\n\n  const modalTitle = modal.querySelector('#modalTitle');\n  modalTitle.textContent = movieData.title;\n\n  const modalRating = modal.querySelector('#modalRating');\n  modalRating.textContent = movieData.vote_average;\n\n  const modalPopularity = modal.querySelector('#modalPopularity');\n  modalPopularity.textContent = movieData.popularity;\n\n  const modalOriginalTitle = modal.querySelector('#modalOriginalTitle');\n  modalOriginalTitle.textContent = movieData.original_title;\n\n  const genreIds = movieData.genre_ids;\n  const genreNames = await Promise.all(\n    genreIds.map(async genreId => await fetchGenreName(genreId)),\n  );\n  const modalGenres = modal.querySelector('#modalGenres');\n  modalGenres.textContent = genreNames.join(', ');\n\n  const modalOverview = modal.querySelector('#modalOverview');\n  modalOverview.textContent = movieData.overview;\n\n  const watchedButton = modal.querySelector('#watchedButton');\n  watchedButton.addEventListener('click', () => {\n    console.log('Dodano do obejrzanych: ' + movieData.title);\n  });\n\n  const watchlistButton = modal.querySelector('#watchlistButton');\n  watchlistButton.addEventListener('click', () => {\n    console.log('Dodano do obejrzenia: ' + movieData.title);\n  });\n\n  const trailerLink = modal.querySelector('#trailerLink');\n  trailerLink.href = `https://www.youtube.com/results?search_query=${movieData.title}+trailer`;\n\n  modal.style.display = 'block';\n}\n\nfunction closeModal() {\n  const modal = document.getElementById('movieModal');\n  modal.style.display = 'none';\n}\n\ndocument.addEventListener('click', async event => {\n  const movieElement = event.target.closest('.movie');\n  if (movieElement) {\n    const movieIndex = Array.from(moviesContainer.children).indexOf(movieElement);\n    const movieData = data.results[movieIndex];\n    await openModal(movieData);\n  }\n});\n\nconst modalCloseButton = document.getElementById('modalCloseButton');\nmodalCloseButton.addEventListener('click', closeModal);\n\nasync function fetchMovies() {\n  const url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${currentPage}`;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n\n    for (const movie of data.results) {\n      const movieElement = document.createElement('div');\n      movieElement.classList.add('movie');\n\n      const genreNames = await Promise.all(\n        movie.genre_ids.map(async genreId => await fetchGenreName(genreId)),\n      );\n\n      const releaseYear = formatDate(movie.release_date);\n\n      movieElement.innerHTML = `\n        <img src=\"https://image.tmdb.org/t/p/w300${movie.poster_path}\" alt=\"${movie.title}\">\n        <h3>${movie.title}</h3>\n        <p>Genre: ${genreNames.join(', ')}</p>\n        <p>Release Year: ${releaseYear}</p>\n      `;\n      moviesContainer.appendChild(movieElement);\n    }\n\n    currentPage++;\n  } catch (error) {\n    console.error('Błąd pobierania danych:', error);\n  }\n}\n\nloadMoreButton.addEventListener('click', fetchMovies);\n\nfetchMovies();\n"],"names":["$a898f20bd771b561$var$apiKey","$a898f20bd771b561$var$moviesContainer","document","querySelector","$a898f20bd771b561$var$loadMoreButton","getElementById","$a898f20bd771b561$var$data","$a898f20bd771b561$var$currentPage","async","$a898f20bd771b561$var$fetchGenreName","genreId","genreUrl","response","fetch","genre","json","genres","find","id","name","error","console","addEventListener","event","movieElement","target","closest","movieIndex","Array","from","children","indexOf","movieData","results","modal","modalPoster","src","poster_path","alt","title","textContent","vote_average","popularity","original_title","genreIds","genre_ids","genreNames","Promise","all","map","join","overview","log","href","style","display","$a898f20bd771b561$var$openModal","$a898f20bd771b561$var$fetchMovies","url","movie","createElement","classList","add","releaseYear","dateString","release_date","Date","getFullYear","innerHTML","appendChild"],"version":3,"file":"index.3622d6fb.js.map"}