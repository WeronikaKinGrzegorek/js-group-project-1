{"mappings":"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","sources":["src/js/add-queue.js","src/js/modal-movie.js","src/js/add-watchlist.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\nimport { handleMovieClick } from './modal-movie';\n\nconst queueButton = document.querySelector('#queueButton');\nlet queue = JSON.parse(localStorage.getItem('movieQueue')) || [];\n\nexport function addToQueue(movieData) {\n  const movieId = movieData.id;\n  const isMovieInQueue = queue.some(movieInQueue => {\n    if (movieInQueue.id === movieId) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  if (!isMovieInQueue) {\n    queue.push(movieData);\n    localStorage.setItem('movieQueue', JSON.stringify(queue));\n    Notify.success(`Added movie \"${movieData.title}\" to queue list.`);\n  } else {\n    Notify.failure(`Movie \"${movieData.title}\" is already in queue list.`);\n  }\n}\n\nexport function displayQueue() {\n  console.log(queue);\n}\n\nqueueButton.addEventListener('click', () => {\n  displayQueue(queue);\n});\n","import { showLoader, hideLoader } from './loader.js';\nimport { addToQueue } from './add-queue';\nimport { addToWatchlist } from './add-watchlist.js';\nimport { fetchGenres } from './fetch-genres.js';\n\nconst moviesContainer = document.querySelector('.gallery-home');\nconst apiKey = '55e390226d2f3f6feba5afe684a5a044';\nconst loadMoreButton = document.getElementById('loadMore');\nlet currentPage = 1;\nlet data;\nlet genres = [];\n\nasync function fetchGenreOnce(genreId) {\n  if (genres.length === 0) {\n    genres = await fetchGenres();\n  }\n  const foundGenre = genres.find(genre => genre.id === genreId);\n  return foundGenre ? foundGenre.name : 'Nieznany';\n}\n\nfetchGenreOnce();\n\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  return date.getFullYear();\n}\n\nasync function openModal(movieData) {\n  const modal = document.getElementById('movieModal');\n  const modalContent = modal.querySelector('.modal-content');\n  const modalPoster = modal.querySelector('#modalPoster');\n  modalPoster.src = `https://image.tmdb.org/t/p/w300${movieData.poster_path}`;\n  modalPoster.alt = movieData.title;\n  const modalTitle = modal.querySelector('#modalTitle');\n  modalTitle.textContent = movieData.title.toUpperCase();\n  const modalRating = modal.querySelector('#modalRating');\n  modalRating.textContent = movieData.vote_average;\n  const modalPopularity = modal.querySelector('#modalPopularity');\n  modalPopularity.textContent = movieData.popularity;\n  const modalOriginalTitle = modal.querySelector('#modalOriginalTitle');\n  modalOriginalTitle.textContent = movieData.original_title;\n  const genreIds = movieData.genre_ids;\n  const genreNames = genreIds.map(async genreId => await fetchGenreOnce(genreId));\n  const resolvedGenreNames = await Promise.all(genreNames);\n  const modalGenres = modal.querySelector('#modalGenres');\n  modalGenres.textContent = resolvedGenreNames.join(', ');\n  const modalOverview = modal.querySelector('#modalOverview');\n  modalOverview.textContent = movieData.overview;\n  const watchedButton = modal.querySelector('#watchedButton');\n  watchedButton.addEventListener('click', () => {\n    addToWatchlist(movieData);\n  });\n  const watchlistButton = modal.querySelector('#watchlistButton');\n  watchlistButton.addEventListener('click', () => {\n    addToQueue(movieData);\n  });\n  const trailerLink = modal.querySelector('#trailerLink');\n  trailerLink.href = `https://www.youtube.com/results?search_query=${movieData.title}+trailer`;\n  modal.style.display = 'block';\n\n  // Dodaj obsługę zdarzenia klawisza \"Esc\" po otwarciu modala.\n  document.addEventListener('keydown', handleEscKey);\n\n  // Dodaj obsługę zamykania modala po kliknięciu w obszar poza nim.\n  modal.addEventListener('click', function (event) {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n}\n\nfunction closeModal() {\n  const modal = document.getElementById('movieModal');\n  modal.style.display = 'none';\n\n  // Usuń obsługę zdarzenia klawisza \"Esc\" po zamknięciu modala.\n  document.removeEventListener('keydown', handleEscKey);\n}\n\n// Dodaj funkcję obsługującą zdarzenie naciśnięcia klawisza \"Esc\".\nfunction handleEscKey(event) {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n}\n\nexport function handleMovieClick(event) {\n  const movieElement = event.target.closest('.movie');\n  if (movieElement) {\n    const movieIndex = Array.from(moviesContainer.children).indexOf(movieElement);\n    const movieData = data.results[movieIndex];\n\n    openModal(movieData);\n  }\n}\n\ndocument.addEventListener('click', handleMovieClick);\n\nconst modalCloseButton = document.getElementById('modalCloseButton');\nmodalCloseButton.addEventListener('click', closeModal);\n\nasync function fetchMoviesPopular() {\n  const url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${currentPage}`;\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n\n    if (genres.length === 0) {\n      genres = await fetchGenres();\n    }\n\n    for (const movie of data.results) {\n      const movieElement = document.createElement('div');\n      movieElement.classList.add('movie');\n\n      const genreNames = await Promise.all(\n        movie.genre_ids.map(async genreId => await fetchGenreOnce(genreId)),\n      );\n\n      const releaseYear = formatDate(movie.release_date);\n\n      movieElement.innerHTML = `\n        <div class=\"movie-content\">\n          <img src=\"https://image.tmdb.org/t/p/w300${movie.poster_path}\" alt=\"${movie.title}\">\n          <h3 class=\"movie-title\">${movie.title.toUpperCase()}</h3>\n          <p class=\"movie-info\">\n            ${genreNames.join(', ')} | ${releaseYear}\n          </p>\n        </div>\n      `;\n      moviesContainer.appendChild(movieElement);\n    }\n    hideLoader();\n    currentPage++;\n  } catch (error) {\n    console.error('Błąd pobierania danych:', error);\n  }\n}\n\nloadMoreButton.addEventListener('click', fetchMoviesPopular);\n\nfetchMoviesPopular();\n","import { Notify } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\nimport { handleMovieClick } from './modal-movie';\nimport { drawMovies } from './draw-movie';\n\nconst watchedButton = document.querySelector('#watchlist');\nlet watchlist = JSON.parse(localStorage.getItem('movieWatchlist')) || [];\n\nexport function addToWatchlist(movieData) {\n  const movieId = movieData.id;\n  const isMovieInWatchlist = watchlist.some(movieInWatchlist => {\n    if (movieInWatchlist.id === movieId) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  if (!isMovieInWatchlist) {\n    watchlist.push(movieData);\n    localStorage.setItem('movieWatchlist', JSON.stringify(watchlist));\n    Notify.success(`Added movie \"${movieData.title}\" to watchlist.`);\n  } else {\n    Notify.failure(`Movie \"${movieData.title}\" is already in watchlist.`);\n  }\n}\n\nexport function displayWatchlist() {\n  console.log(queue);\n}\n"],"names":["$7IoHk","parcelRequire","$fHyLY","document","querySelector","$4886da4e258176fd$var$watchlist","JSON","parse","localStorage","getItem","$4886da4e258176fd$export$9d58921fce66163d","movieData","movieId","id","some","movieInWatchlist","Notify","failure","title","push","setItem","stringify","success","$a898f20bd771b561$var$moviesContainer","$a898f20bd771b561$var$loadMoreButton","getElementById","$a898f20bd771b561$var$data","$a898f20bd771b561$var$currentPage","$a898f20bd771b561$var$genres","async","$a898f20bd771b561$var$fetchGenreOnce","genreId","length","$knVcn","fetchGenres","foundGenre","find","genre","name","$a898f20bd771b561$var$openModal","modal","modalPoster","src","poster_path","alt","textContent","toUpperCase","vote_average","popularity","original_title","genreNames","genre_ids","map","resolvedGenreNames","Promise","all","join","overview","addEventListener","$82620ba3e0e3cf2d$export$30665681cb9a2b60","href","style","display","$a898f20bd771b561$var$handleEscKey","event","target","$a898f20bd771b561$var$closeModal","removeEventListener","key","movieElement","closest","movieIndex","Array","from","children","indexOf","results","$a898f20bd771b561$var$fetchMoviesPopular","url","response","fetch","json","movie","createElement","classList","add","releaseYear","dateString","release_date","Date","getFullYear","innerHTML","appendChild","hideLoader","error","console","$82620ba3e0e3cf2d$var$queueButton","$82620ba3e0e3cf2d$var$queue","movieInQueue","log"],"version":3,"file":"index.4f571dcf.js.map"}